same .github/workflows/test.yml -- PathDiff (files are binary equal)
same .gitignore -- PathDiff (files are binary equal)
same LICENSE.md -- PathDiff (files are binary equal)
same README.md -- PathDiff (files are binary equal)
same pyproject.toml -- PathDiff (files are binary equal)
same rdiff/__init__.py -- PathDiff (files are binary equal)
same rdiff/chunk.py -- PathDiff (files are binary equal)
same rdiff/cli/path_util.py -- PathDiff (files are binary equal)
same rdiff/cmyers.pyx -- PathDiff (files are binary equal)
same rdiff/contextual/base.py -- PathDiff (files are binary equal)
same rdiff/contextual/magic -- PathDiff (files are binary equal)
same rdiff/contextual/path.py -- PathDiff (files are binary equal)
same rdiff/contextual/table.py -- PathDiff (files are binary equal)
same rdiff/contextual/text.py -- PathDiff (files are binary equal)
same rdiff/myers.py -- PathDiff (files are binary equal)
same rdiff/numpy.py -- PathDiff (files are binary equal)
same rdiff/presentation/base.py -- PathDiff (files are binary equal)
same rdiff/sequence.py -- PathDiff (files are binary equal)
same setup.py -- PathDiff (files are binary equal)
same tests/__init__.py -- PathDiff (files are binary equal)
same tests/conftest.py -- PathDiff (files are binary equal)
same tests/contextual/__init__.py -- PathDiff (files are binary equal)
same tests/contextual/test_table.py -- PathDiff (files are binary equal)
same tests/test_chunk.py -- PathDiff (files are binary equal)
same tests/test_cmyers.py -- PathDiff (files are binary equal)
same tests/test_myers.py -- PathDiff (files are binary equal)
same tests/test_numpy.py -- PathDiff (files are binary equal)
same tests/test_path_util.py -- PathDiff (files are binary equal)
same tests/test_presentation/__init__.py -- PathDiff (files are binary equal)
same tests/test_presentation/cases/co2_emissions/a.csv -- PathDiff (files are binary equal)
same tests/test_presentation/cases/co2_emissions/b.csv -- PathDiff (files are binary equal)
comparing tests/test_presentation/cases/co2_emissions/diff.csv.md (ratio=0.9762)
< comparing a.csv/b.csv
---
> comparing .
---
  |     | Country     | -Region | Date       | Kilotons of Co2 | -Metric Tons Per Capita |
  | --- | ----------- | ------- | ---------- | --------------- | ----------------------- |
(39 lines match)
comparing tests/test_presentation/cases/co2_emissions/diff.csv.txt (ratio=0.9762)
< comparing a.csv/b.csv
---
> comparing .
---
      Country     -Region Date       Kilotons of Co2 -Metric Tons Per Capita
  --- ----------- ------- ---------- --------------- -----------------------
(39 lines match)
comparing tests/test_presentation/cases/co2_emissions/diff.excel.txt (ratio=0.9762)
< comparing a.excel/b.excel/Sheet1
---
> comparing ./Sheet1
---
      Country     -Region Date       Kilotons of Co2 -Metric Tons Per Capita
  --- ----------- ------- ---------- --------------- -----------------------
(39 lines match)
comparing tests/test_presentation/cases/co2_emissions/diff.feather.txt (ratio=0.9762)
< comparing a.feather/b.feather
---
> comparing .
---
      Country     -Region Date       Kilotons of Co2 -Metric Tons Per Capita
  --- ----------- ------- ---------- --------------- -----------------------
(39 lines match)
comparing tests/test_presentation/cases/co2_emissions/diff.parquet.txt (ratio=0.9762)
< comparing a.parquet/b.parquet
---
> comparing .
---
      Country     -Region Date       Kilotons of Co2 -Metric Tons Per Capita
  --- ----------- ------- ---------- --------------- -----------------------
(39 lines match)
same tests/test_presentation/cases/readme/a.txt -- PathDiff (files are binary equal)
same tests/test_presentation/cases/readme/b.txt -- PathDiff (files are binary equal)
comparing tests/test_presentation/cases/readme/diff.txt (ratio=0.9875)
< comparing a.txt/b.txt
---
> comparing .
---
  (27 lines match)
      from rdiff.sequence import diff
(77 lines match)
same tests/test_presentation/test_base.py -- PathDiff (files are binary equal)
comparing tests/test_presentation/util.py (ratio=0.8750)
  from io import StringIO
  
---
< from rdiff.contextual.path import diff_path
---
> from rdiff.cli.processor import process_iter
---
  from rdiff.presentation.base import TextPrinter
  
(2 lines match)
      if printer_kwargs is None:
          printer_kwargs = {}
---
<     diff = diff_path(a, b, f"{a.name}/{b.name}", **kwargs)
---
  
      buffer = StringIO()
      printer = TextPrinter(printer=buffer, **printer_kwargs)
---
>     for i in process_iter(a, b, **kwargs):
---
â‰ˆ     +++    +++printer.print_diff(---d---i---ff---)
---
  
      return buffer.getvalue()
same tests/test_sequence.py -- PathDiff (files are binary equal)
same tests/util.py -- PathDiff (files are binary equal)
NEW rdiff/cli/processor.py
